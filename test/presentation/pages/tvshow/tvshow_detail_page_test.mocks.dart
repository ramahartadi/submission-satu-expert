// TODO Implement this library.// Mocks generated by Mockito 5.3.2 from annotations
// in ditonton/test/presentation/pages/tvshow/tvshow_detail_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i11;
import 'dart:ui' as _i12;

import 'package:core/utils/state_enum.dart' as _i9;
import 'package:core/domain/entities/tvshow/tvshow.dart' as _i10;
import 'package:core/domain/entities/tvshow/tvshow_detail.dart' as _i7;
import 'package:core/domain/usecases/tvshow/get_tvshow_detail.dart' as _i2;
import 'package:core/domain/usecases/tvshow/get_tvshow_recommendations.dart'
    as _i3;
import 'package:core/domain/usecases/tvshow/get_watchlist_status_tvshows.dart'
    as _i4;
import 'package:core/domain/usecases/tvshow/remove_watchlist_tvshow.dart'
    as _i6;
import 'package:core/domain/usecases/tvshow/save_watchlist_tvshow.dart' as _i5;
import 'package:core/presentation/provider/tvshow/tvshow_detail_notifier.dart'
    as _i8;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGetTvshowDetail_0 extends _i1.SmartFake
    implements _i2.GetTvshowDetail {
  _FakeGetTvshowDetail_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetTvshowRecommendations_1 extends _i1.SmartFake
    implements _i3.GetTvshowRecommendations {
  _FakeGetTvshowRecommendations_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetWatchListStatusTvshow_2 extends _i1.SmartFake
    implements _i4.GetWatchListStatusTvshow {
  _FakeGetWatchListStatusTvshow_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSaveWatchlistTvshow_3 extends _i1.SmartFake
    implements _i5.SaveWatchlistTvshow {
  _FakeSaveWatchlistTvshow_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRemoveWatchlistTvshow_4 extends _i1.SmartFake
    implements _i6.RemoveWatchlistTvshow {
  _FakeRemoveWatchlistTvshow_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTvshowDetail_5 extends _i1.SmartFake implements _i7.TvshowDetail {
  _FakeTvshowDetail_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TvshowDetailNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvshowDetailNotifier extends _i1.Mock
    implements _i8.TvshowDetailNotifier {
  MockTvshowDetailNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetTvshowDetail get getTvshowDetail => (super.noSuchMethod(
        Invocation.getter(#getTvshowDetail),
        returnValue: _FakeGetTvshowDetail_0(
          this,
          Invocation.getter(#getTvshowDetail),
        ),
      ) as _i2.GetTvshowDetail);
  @override
  _i3.GetTvshowRecommendations get getTvshowRecommendations =>
      (super.noSuchMethod(
        Invocation.getter(#getTvshowRecommendations),
        returnValue: _FakeGetTvshowRecommendations_1(
          this,
          Invocation.getter(#getTvshowRecommendations),
        ),
      ) as _i3.GetTvshowRecommendations);
  @override
  _i4.GetWatchListStatusTvshow get getWatchListStatusTvshow =>
      (super.noSuchMethod(
        Invocation.getter(#getWatchListStatusTvshow),
        returnValue: _FakeGetWatchListStatusTvshow_2(
          this,
          Invocation.getter(#getWatchListStatusTvshow),
        ),
      ) as _i4.GetWatchListStatusTvshow);
  @override
  _i5.SaveWatchlistTvshow get saveWatchlistTvshow => (super.noSuchMethod(
        Invocation.getter(#saveWatchlistTvshow),
        returnValue: _FakeSaveWatchlistTvshow_3(
          this,
          Invocation.getter(#saveWatchlistTvshow),
        ),
      ) as _i5.SaveWatchlistTvshow);
  @override
  _i6.RemoveWatchlistTvshow get removeWatchlistTvshow => (super.noSuchMethod(
        Invocation.getter(#removeWatchlistTvshow),
        returnValue: _FakeRemoveWatchlistTvshow_4(
          this,
          Invocation.getter(#removeWatchlistTvshow),
        ),
      ) as _i6.RemoveWatchlistTvshow);
  @override
  _i7.TvshowDetail get tvshow => (super.noSuchMethod(
        Invocation.getter(#tvshow),
        returnValue: _FakeTvshowDetail_5(
          this,
          Invocation.getter(#tvshow),
        ),
      ) as _i7.TvshowDetail);
  @override
  _i9.RequestState get tvshowState => (super.noSuchMethod(
        Invocation.getter(#tvshowState),
        returnValue: _i9.RequestState.Empty,
      ) as _i9.RequestState);
  @override
  List<_i10.Tvshow> get tvshowRecommendations => (super.noSuchMethod(
        Invocation.getter(#tvshowRecommendations),
        returnValue: <_i10.Tvshow>[],
      ) as List<_i10.Tvshow>);
  @override
  _i9.RequestState get recommendationState => (super.noSuchMethod(
        Invocation.getter(#recommendationState),
        returnValue: _i9.RequestState.Empty,
      ) as _i9.RequestState);
  @override
  String get message => (super.noSuchMethod(
        Invocation.getter(#message),
        returnValue: '',
      ) as String);
  @override
  bool get isAddedToWatchlist => (super.noSuchMethod(
        Invocation.getter(#isAddedToWatchlist),
        returnValue: false,
      ) as bool);
  @override
  String get watchlistMessage => (super.noSuchMethod(
        Invocation.getter(#watchlistMessage),
        returnValue: '',
      ) as String);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i11.Future<void> fetchTvshowDetail(int? id) => (super.noSuchMethod(
        Invocation.method(
          #fetchTvshowDetail,
          [id],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
  @override
  _i11.Future<void> addWatchlist(_i7.TvshowDetail? tvshow) =>
      (super.noSuchMethod(
        Invocation.method(
          #addWatchlist,
          [tvshow],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
  @override
  _i11.Future<void> removeFromWatchlist(_i7.TvshowDetail? tvshow) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeFromWatchlist,
          [tvshow],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
  @override
  _i11.Future<void> loadWatchlistStatus(int? id) => (super.noSuchMethod(
        Invocation.method(
          #loadWatchlistStatus,
          [id],
        ),
        returnValue: _i11.Future<void>.value(),
        returnValueForMissingStub: _i11.Future<void>.value(),
      ) as _i11.Future<void>);
  @override
  void addListener(_i12.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i12.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
