// Mocks generated by Mockito 5.3.2 from annotations
// in tvshows/test/presentation/bloc/tvshow_detail_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:core/utils/failure.dart' as _i6;
import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:tvshows/domain/entities/tvshow.dart' as _i9;
import 'package:tvshows/domain/entities/tvshow_detail.dart' as _i7;
import 'package:tvshows/domain/repositories/tvshow_repository.dart' as _i2;
import 'package:tvshows/domain/usecases/get_tvshow_detail.dart' as _i4;
import 'package:tvshows/domain/usecases/get_tvshow_recommendations.dart' as _i8;
import 'package:tvshows/domain/usecases/get_watchlist_status_tvshows.dart'
    as _i10;
import 'package:tvshows/domain/usecases/remove_watchlist_tvshow.dart' as _i12;
import 'package:tvshows/domain/usecases/save_watchlist_tvshow.dart' as _i11;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTvshowRepository_0 extends _i1.SmartFake
    implements _i2.TvshowRepository {
  _FakeTvshowRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GetTvshowDetail].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvshowDetail extends _i1.Mock implements _i4.GetTvshowDetail {
  MockGetTvshowDetail() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvshowRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTvshowRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.TvshowRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.TvshowDetail>> execute(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [id],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.Failure, _i7.TvshowDetail>>.value(
                _FakeEither_1<_i6.Failure, _i7.TvshowDetail>(
          this,
          Invocation.method(
            #execute,
            [id],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, _i7.TvshowDetail>>);
}

/// A class which mocks [GetTvshowRecommendations].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvshowRecommendations extends _i1.Mock
    implements _i8.GetTvshowRecommendations {
  MockGetTvshowRecommendations() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvshowRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTvshowRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.TvshowRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i9.Tvshow>>> execute(dynamic id) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [id],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i6.Failure, List<_i9.Tvshow>>>.value(
                _FakeEither_1<_i6.Failure, List<_i9.Tvshow>>(
          this,
          Invocation.method(
            #execute,
            [id],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, List<_i9.Tvshow>>>);
}

/// A class which mocks [GetWatchListStatus].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchListStatus extends _i1.Mock
    implements _i10.GetWatchlistStatusTvshow {
  MockGetWatchListStatus() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvshowRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTvshowRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.TvshowRepository);
  @override
  _i5.Future<bool> execute(int? id) => (super.noSuchMethod(
        Invocation.method(
          #execute,
          [id],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
}

/// A class which mocks [SaveWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveWatchlist extends _i1.Mock implements _i11.SaveWatchlistTvshow {
  MockSaveWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvshowRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTvshowRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.TvshowRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, String>> execute(
          _i7.TvshowDetail? tvshow) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [tvshow],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, String>>.value(
            _FakeEither_1<_i6.Failure, String>(
          this,
          Invocation.method(
            #execute,
            [tvshow],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, String>>);
}

/// A class which mocks [RemoveWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveWatchlist extends _i1.Mock
    implements _i12.RemoveWatchlistTvshow {
  MockRemoveWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvshowRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeTvshowRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.TvshowRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, String>> execute(
          _i7.TvshowDetail? tvshow) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [tvshow],
        ),
        returnValue: _i5.Future<_i3.Either<_i6.Failure, String>>.value(
            _FakeEither_1<_i6.Failure, String>(
          this,
          Invocation.method(
            #execute,
            [tvshow],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i6.Failure, String>>);
}
